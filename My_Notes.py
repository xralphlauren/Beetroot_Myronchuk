# Cntrl + / - закоментить выделенное
# ПКМ > Execute line in Python Console - Запустить определённый кусок кода
# print(*objects, sep=' ', end='\n', file=sys.stdout, flush=False), где: flush=True записать в файл построчно, False подождать всего цикла и записать в файл все сразу
# round() - функция округления числа
# abs() - число по модулю ( число с минусом претваряем в число с плюсом )
# \' - символ \ перед другим символом например кавычкой, указывает что не нужно этот символ учитывать как специальный
# .isalpha() - проверяет отнсится ли переменная к буквам ( строкам )
# .isdigit() - проверяет отнсится ли переменная к цифрам
# print(f'i have'{variable}) , где variable это название переменной - склеивание строки
# .find(str) - поиск индекса строки ( если ничего не найдёт то выведет -1 )
# .index(str) - поиск индекса строки ( если ничего не найдёт то выведет эрор )
# .rfind(str) -поиск индекса строки ( справа на лево / если ничего не найдёт то выдаст -1)
# print('Superhero name is {1}, his super power - {0}, his enemy - {2}'.format(super_power, enemy, name)) - в формат передаем переменные через запятую, в стркое цифрой указываем какую переменную хотим использовать
# print(f"Good day {name}! {day} is a perfect day to learn some python."), где name, day - название переменных
# False = 0 /// True = 1
# x is True = х является тру
# elif - если будет выражение if, а потом elif и выражение будет подходить под оба алгоритма, то выведется только первый
# Вместе с while можно использовать else на одном уровне

#___________________________________________________________________________________

#GITHUB
# в cmd > cd ..... репозиторий
# git branch ( посмотреть ветки )
# git add directory ( directory - название файла или папки ) - добавить файл в нит
# git status - что зелёное, что красное
# git commit -m "first commit"
# git status
# git push

##### Обновить проект с github #####

# git fetch - покажет что нового на github
# git pull - сделать апдейт проекта с github